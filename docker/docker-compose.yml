version: "3.3"
services:
  prometheus:
    image: microkubes/prometheus:latest
    volumes:
      - "prometheus-data:/prometheus"
    ports:
      - 9090:9090

  kong-database:
      image: postgres:9.5
      environment:
        - POSTGRES_USER=kong
        - POSTGRES_DB=kong
      ports:
        - 5432:5432
      volumes:
        - "postgres-data:/var/lib/postgresql/data"
      deploy:
        restart_policy:
          condition: on-failure

  kong-migration:
    image: microkubes/kong:latest
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - CONSUL_URL=http://consul:8500
    entrypoint: "/docker-entrypoint.sh"
    command: "/migrations.sh"

  kong:
    image: microkubes/kong:latest
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8946:7946"
      - "8946:7946/udp"
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_USER=kong
      - KONG_DNS_SERVER_NAME=consul
      - KONG_DNS_SERVER_PORT=8600
      - CONSUL_URL=http://consul:8500
    deploy:
      restart_policy:
        condition: any

  nginx:
    image: nginx:latest
    ports: 
      - 10080:80


  consul:
    image: consul:1.0.1
    volumes:
      - "consul-data:/consul/data"
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:8600/udp"
    command:
      - "agent"
      - "-server"
      - "-client"
      - "0.0.0.0"
      - '-advertise={{ GetInterfaceIP "eth0" }}'
      - "-recursor"
      - "127.0.0.11"
      - "-bootstrap"
      - "-ui"
    deploy:
      restart_policy:
        condition: any

  registrator:
    image: gliderlabs/registrator:v7
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    command:
      - -internal=true
      - "consul://consul:8500"
    deploy:
      restart_policy:
        condition: any

volumes:
  prometheus-data:
  postgres-data:
  consul-data:

