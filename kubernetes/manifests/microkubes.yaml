apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: microservice-apps-management
  namespace: microkubes
  labels:
    app: microservice-apps-management
    platform: microkubes
spec:
  replicas: 1
  template:
    metadata:
      name: microservice-apps-management
      labels:
        app: microservice-apps-management
        platform: microkubes
      annotations:
        consul.register/enabled: "true"
        consul.register/service.name: "microservice-apps-management"
    spec:
      containers:
        - name: microservice-apps-management
          image: microkubes/microservice-apps-management:v1.0.2-beta
          imagePullPolicy: Always
          env:
            - name: SERVICE_CONFIG_FILE
              value: /etc/config/config.json
            - name: API_GATEWAY_URL
              value: "http://kong-admin:8001"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: microkubes-secrets
              mountPath: /run/secrets/microkubes
            - name: service-config
              mountPath: /etc/config
      volumes:
        - name: microkubes-secrets
          secret:
            secretName: microkubes-secrets
        - name: service-config
          configMap:
            name: microkubes-configmap
            items:
              - key: apps-management-config.json
                path: config.json

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: microservice-user
  namespace: microkubes
  labels:
    app: microservice-user
    platform: microkubes
spec:
  replicas: 1
  template:
    metadata:
      name: microservice-user
      labels:
        app: microservice-user
        platform: microkubes
      annotations:
        consul.register/enabled: "true"
        consul.register/service.name: "microservice-user"
    spec:
      containers:
        - name: microservice-user
          image: microkubes/microservice-user:v1.1.0-beta
          imagePullPolicy: Always
          env:
            - name: SERVICE_CONFIG_FILE
              value: /etc/config/config.json
            - name: API_GATEWAY_URL
              value: "http://kong-admin:8001"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: microkubes-secrets
              mountPath: /run/secrets/microkubes
            - name: service-config
              mountPath: /etc/config
      volumes:
        - name: microkubes-secrets
          secret:
            secretName: microkubes-secrets
        - name: service-config
          configMap:
            name: microkubes-configmap
            items:
              - key: user-config.json
                path: config.json

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: identity-provider
  namespace: microkubes
  labels:
    app: identity-provider
    platform: microkubes
spec:
  replicas: 1
  template:
    metadata:
      name: identity-provider
      labels:
        app: identity-provider
        platform: microkubes
      annotations:
        consul.register/enabled: "true"
        consul.register/service.name: "identity-provider"
    spec:
      containers:
        - name: identity-provider
          image: microkubes/identity-provider:v1.0.3-beta
          imagePullPolicy: Always
          env:
            - name: SERVICE_CONFIG_FILE
              value: /etc/config/config.json
            - name: API_GATEWAY_URL
              value: "http://kong-admin:8001"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: microkubes-secrets
              mountPath: /run/secrets/microkubes
            - name: service-config
              mountPath: /etc/config
      volumes:
        - name: microkubes-secrets
          secret:
            secretName: microkubes-secrets
        - name: service-config
          configMap:
            name: microkubes-configmap
            items:
              - key: identity-provider-config.json
                path: config.json

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: microservice-user-profile
  namespace: microkubes
  labels:
    app: microservice-user-profile
    platform: microkubes
spec:
  replicas: 1
  template:
    metadata:
      name: microservice-user-profile
      labels:
        app: microservice-user-profile
        platform: microkubes
      annotations:
        consul.register/enabled: "true"
        consul.register/service.name: "microservice-user-profile"
    spec:
      containers:
        - name: microservice-user-profile
          image: microkubes/microservice-user-profile:v1.0.2-beta
          imagePullPolicy: Always
          env:
            - name: SERVICE_CONFIG_FILE
              value: /etc/config/config.json
            - name: API_GATEWAY_URL
              value: "http://kong-admin:8001"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: microkubes-secrets
              mountPath: /run/secrets/microkubes
            - name: service-config
              mountPath: /etc/config
      volumes:
        - name: microkubes-secrets
          secret:
            secretName: microkubes-secrets
        - name: service-config
          configMap:
            name: microkubes-configmap
            items:
              - key: user-profile-config.json
                path: config.json

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: microservice-registration
  namespace: microkubes
  labels:
    app: microservice-registration
    platform: microkubes
spec:
  replicas: 1
  template:
    metadata:
      name: microservice-registration
      labels:
        app: microservice-registration
        platform: microkubes
      annotations:
        consul.register/enabled: "true"
        consul.register/service.name: "microservice-registration"
    spec:
      containers:
        - name: microservice-registration
          image: microkubes/microservice-registration:v1.0.1-beta
          imagePullPolicy: Always
          env:
            - name: SERVICE_CONFIG_FILE
              value: /etc/config/config.json
            - name: API_GATEWAY_URL
              value: "http://kong-admin:8001"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: microkubes-secrets
              mountPath: /run/secrets/microkubes
            - name: service-config
              mountPath: /etc/config
      volumes:
        - name: microkubes-secrets
          secret:
            secretName: microkubes-secrets
        - name: service-config
          configMap:
            name: microkubes-configmap
            items:
              - key: registration-config.json
                path: config.json

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: microservice-mail
  namespace: microkubes
  labels:
    app: microservice-mail
    platform: microkubes
spec:
  replicas: 1
  template:
    metadata:
      name: microservice-mail
      labels:
        app: microservice-mail
        platform: microkubes
      annotations:
        consul.register/enabled: "true"
        consul.register/service.name: "microservice-mail"
    spec:
      containers:
        - name: microservice-mail
          image: microkubes/microservice-mail:v1.0.0-beta
          imagePullPolicy: Always
          env:
            - name: SERVICE_CONFIG_FILE
              value: /etc/config/config.json
            - name: ALLOW_UNENCRYPTED_CONNECTION
              value: "true"
            - name: API_GATEWAY_URL
              value: "http://kong-admin:8001"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: microkubes-secrets
              mountPath: /run/secrets/microkubes
            - name: service-config
              mountPath: /etc/config
      volumes:
        - name: microkubes-secrets
          secret:
            secretName: microkubes-secrets
        - name: service-config
          configMap:
            name: microkubes-configmap
            items:
              - key: mail-config.json
                path: config.json

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jwt-issuer
  namespace: microkubes
  labels:
    app: jwt-issuer
    platform: microkubes
spec:
  replicas: 1
  template:
    metadata:
      name: jwt-issuer
      labels:
        app: jwt-issuer
        platform: microkubes
      annotations:
        consul.register/enabled: "true"
        consul.register/service.name: "jwt-issuer"
    spec:
      containers:
        - name: jwt-issuer
          image: microkubes/jwt-issuer:v1.0.1-beta
          imagePullPolicy: Always
          env:
            - name: SERVICE_CONFIG_FILE
              value: /etc/config/config.json
            - name: API_GATEWAY_URL
              value: "http://kong-admin:8001"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: microkubes-secrets
              mountPath: /run/secrets/microkubes
            - name: service-config
              mountPath: /etc/config
      volumes:
        - name: microkubes-secrets
          secret:
            secretName: microkubes-secrets
        - name: service-config
          configMap:
            name: microkubes-configmap
            items:
              - key: jwt-issuer-config.json
                path: config.json

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: authorization-server
  namespace: microkubes
  labels:
    app: authorization-server
    platform: microkubes
spec:
  replicas: 1
  template:
    metadata:
      name: authorization-server
      labels:
        app: authorization-server
        platform: microkubes
      annotations:
        consul.register/enabled: "true"
        consul.register/service.name: "authorization-server"
    spec:
      containers:
        - name: authorization-server
          image: microkubes/authorization-server:v1.0.0-beta
          imagePullPolicy: Always
          env:
            - name: SERVICE_CONFIG_FILE
              value: /etc/config/config.json
            - name: API_GATEWAY_URL
              value: "http://kong-admin:8001"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: microkubes-secrets
              mountPath: /run/secrets/microkubes
            - name: service-config
              mountPath: /etc/config
      volumes:
        - name: microkubes-secrets
          secret:
            secretName: microkubes-secrets
        - name: service-config
          configMap:
            name: microkubes-configmap
            items:
              - key: auth-server-config.json
                path: config.json